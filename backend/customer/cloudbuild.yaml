steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      [
        "-c",
        "cd backend/customer && docker build --build-arg MASTER_KEY=$$RAILS_KEY -t gcr.io/${PROJECT_ID}/${_SERVICE_NAME} . ",
      ]
    secretEnv: ["RAILS_KEY"]
  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]
  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    entrypoint: "bash"
    args:
      [
        "-c",
        "/buildstep/execute.sh -i gcr.io/$PROJECT_ID/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=$$RAILS_KEY -e SECRET_KEY_BASE=${_SECRET_KEY_BASE} -e DB_PASSWORD=${_DB_PASSWORD} -- bundle exec rails db:migrate",
      ]
    secretEnv: ["RAILS_KEY"]
substitutions:
  _REGION: asia-southeast1
  _SERVICE_NAME: dbs-service
  _INSTANCE_NAME: database1-instance
  _SECRET_NAME: rails_secret

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME}/versions/latest
      env: RAILS_KEY
images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
